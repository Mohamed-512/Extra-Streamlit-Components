{"version":3,"sources":["BouncingImage.jsx","index.tsx"],"names":["styles","createStyles","theme","root","height","container","display","paper","margin","svg","width","polygon","fill","stroke","strokeWidth","BouncingImage","_StreamlitComponentBa","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","state","animationTimeRoundTrip","isAnimating","keepAnimating","render","_this$props","classes","_this$props$args","args","image","React","createElement","className","Grow","Object","assign","in","style","transformOrigin","timeout","CardMedia","_createClass","key","value","_this2","_this$props$args2","this","animation_time","animate","Streamlit","setComponentValue","setState","setInterval","StreamlitComponentBase","withStreamlitConnection","withStyles","ReactDOM","StrictMode","document","getElementById"],"mappings":"qQAWMA,EAASC,aAAa,SAACC,GAAK,MAAM,CACtCC,KAAM,CACJC,OAAQ,KAEVC,UAAW,CACTC,QAAS,QAEXC,MAAO,CACLC,OAAQ,GAEVC,IAAK,CACHC,MAAO,IACPN,OAAQ,KAEVO,QAAS,CACPC,KAAM,QACNC,OAAQ,MACRC,YAAa,OAIXC,EAAa,SAAAC,GAAAC,YAAAF,EAAAC,GAAA,IAAAE,EAAAC,YAAAJ,GAOjB,SAAAA,EAAYK,GAAQ,IAADC,EAmDlB,OAnDkBC,YAAA,KAAAP,IACjBM,EAAAH,EAAAK,KAAA,KAAMH,IAPRI,MAAQ,CACNC,uBAAwB,KACxBC,aAAa,EACbC,eAAe,GAChBN,EA+BDO,OAAS,WACP,IAAMF,EAAcL,EAAKG,MAAME,YAC/BG,EAGIR,EAAKD,MAFPU,EAAOD,EAAPC,QAAOC,EAAAF,EACPG,KAAQC,EAAKF,EAALE,MAAO7B,EAAM2B,EAAN3B,OAAQM,EAAKqB,EAALrB,MAGzB,OACEwB,IAAAC,cAAA,OAAKC,UAAWN,EAAQ3B,MACtB+B,IAAAC,cAAA,OAAKC,UAAWN,EAAQzB,WACtB6B,IAAAC,cAACE,IAAIC,OAAAC,OAAA,CACHC,GAAId,EACJe,MAAO,CAAEC,gBAAiB,UACrBhB,EACD,CAAEiB,QAAStB,EAAKG,MAAMC,uBAAyB,GAC/C,IAEJS,IAAAC,cAACS,IAAS,CAACX,MAAOA,EAAOQ,MAAO,CAAErC,SAAQM,eAKnDW,EAxBA,OAzBAwB,YAAA9B,EAAA,EAAA+B,IAAA,oBAAAC,MAED,WAAqB,IAADC,EAAA,KAClBC,EAAoCC,KAAK9B,MAAMY,KAAvCmB,EAAcF,EAAdE,eAAgBC,EAAOH,EAAPG,QAExBC,IAAUC,kBAAkBF,GAC5BF,KAAKK,UACH,iBAAO,CACL9B,uBAAwB0B,EACxBxB,cAAeyB,MAEjB,kBACEI,aACE,kBACER,EAAKxB,MAAMG,eACXqB,EAAKO,UACH,iBAAO,CACL7B,aACGsB,EAAKxB,MAAME,aAAesB,EAAKxB,MAAMG,kBAE1C,kBAAM0B,IAAUC,kBAAkBN,EAAKxB,MAAMG,oBAEjDqB,EAAKxB,MAAMC,uBAAyB,UAG3CV,EAlCgB,CAAS0C,KA6DbC,cAAwBC,YAAW3D,EAAX2D,CAAmB5C,ICzF1D6C,IAAShC,OACPM,IAAAC,cAACD,IAAM2B,WAAU,KACf3B,IAAAC,cAACpB,EAAa,OAEhB+C,SAASC,eAAe,W","file":"static/js/main.d071236f.chunk.js","sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport React from \"react\"\n\nimport { withStyles, createStyles } from \"@material-ui/core/styles\"\nimport Grow from \"@material-ui/core/Grow\"\nimport CardMedia from \"@material-ui/core/CardMedia\"\n\nconst styles = createStyles((theme) => ({\n  root: {\n    height: 180,\n  },\n  container: {\n    display: \"flex\",\n  },\n  paper: {\n    margin: 1,\n  },\n  svg: {\n    width: 100,\n    height: 100,\n  },\n  polygon: {\n    fill: \"white\",\n    stroke: \"red\",\n    strokeWidth: 1,\n  },\n}))\n\nclass BouncingImage extends StreamlitComponentBase {\n  state = {\n    animationTimeRoundTrip: 1750,\n    isAnimating: true,\n    keepAnimating: false,\n  }\n\n  constructor(props) {\n    super(props)\n  }\n\n  componentDidMount() {\n    const { animation_time, animate } = this.props.args\n\n    Streamlit.setComponentValue(animate)\n    this.setState(\n      () => ({\n        animationTimeRoundTrip: animation_time,\n        keepAnimating: animate,\n      }),\n      () =>\n        setInterval(\n          () =>\n            this.state.keepAnimating &&\n            this.setState(\n              () => ({\n                isAnimating:\n                  !this.state.isAnimating && this.state.keepAnimating,\n              }),\n              () => Streamlit.setComponentValue(this.state.keepAnimating)\n            ),\n          this.state.animationTimeRoundTrip / 2\n        )\n    )\n  }\n\n  render = () => {\n    const isAnimating = this.state.isAnimating\n    let {\n      classes,\n      args: { image, height, width },\n    } = this.props\n\n    return (\n      <div className={classes.root}>\n        <div className={classes.container}>\n          <Grow\n            in={isAnimating}\n            style={{ transformOrigin: \"0 0 0\" }}\n            {...(isAnimating\n              ? { timeout: this.state.animationTimeRoundTrip / 2 }\n              : {})}\n          >\n            <CardMedia image={image} style={{ height, width }} />\n          </Grow>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withStreamlitConnection(withStyles(styles)(BouncingImage))\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport BouncingImage from \"./BouncingImage.jsx\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <BouncingImage />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}